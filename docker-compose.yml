version: '3.8'

services:
  # Kibana
  kibana:
    image: kibana:9.0.2
    environment:
      - ELASTICSEARCH_URL=elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - pricing-network
  
  # Elastic Search
  elasticsearch:
    image: elasticsearch:9.0.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - pricing-network
  
  # RabbitMq
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - pricing-network
  
  # Redis
  redis-server:
    container_name: redis-server
    image: redis
    ports:
      - "6379:6379"
    networks:
      - pricing-network
  
  # SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - pricing-network
  
  # PriceManager
  price-manager:
    build:
      context: ./src
      dockerfile: PriceManager/Dockerfile
    container_name: price-manager
    ports:
      - "8080:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      kibana:
          condition: service_started
      redis-server:
        condition: service_started
    environment:
      - DOTNET_URLS=http://+:80
    networks:
      - pricing-network
        
  # PriceReader
  price-reader:
    build:
      context: ./src
      dockerfile: PriceReader/Dockerfile
    container_name: price-reader
    ports:
      - "8081:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      kibana:
        condition: service_started
      redis-server:
        condition: service_started
    environment:
      - DOTNET_URLS=http://+:80
    networks:
      - pricing-network
        
  # PriceWriter
  price-writer:
    build:
      context: ./src
      dockerfile: PriceWriter/Dockerfile
    container_name: price-writer
    ports:
      - "8082:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      kibana:
        condition: service_started
      redis-server:
        condition: service_started
    environment:
      - DOTNET_URLS=http://+:80
    networks:
      - pricing-network

volumes:
  elasticsearch-data:
  rabbitmq_data:
  sql_data:

networks:
  pricing-network:
    driver: bridge